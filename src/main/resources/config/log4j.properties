



##\u5B9A\u4E49LOG\u8F93\u51FA\u7EA7\u522B  
#log4j.rootLogger=Debug,Console,File  
##\u5B9A\u4E49\u65E5\u5FD7\u8F93\u51FA\u76EE\u7684\u5730\u4E3A\u63A7\u5236\u53F0  
#log4j.appender.Console=org.apache.log4j.ConsoleAppender  
#log4j.appender.Console.Target=System.out  
##\u53EF\u4EE5\u7075\u6D3B\u5730\u6307\u5B9A\u65E5\u5FD7\u8F93\u51FA\u683C\u5F0F\uFF0C\u4E0B\u9762\u4E00\u884C\u662F\u6307\u5B9A\u5177\u4F53\u7684\u683C\u5F0F  
#log4j.appender.Console.layout = org.apache.log4j.PatternLayout  
#log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  
#  
##\u6587\u4EF6\u5927\u5C0F\u5230\u8FBE\u6307\u5B9A\u5C3A\u5BF8\u7684\u65F6\u5019\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684\u6587\u4EF6  
#log4j.appender.File = org.apache.log4j.RollingFileAppender  
##\u6307\u5B9A\u8F93\u51FA\u76EE\u5F55  
#log4j.appender.File.File = logs/ssm.log  
##\u5B9A\u4E49\u6587\u4EF6\u6700\u5927\u5927\u5C0F  
#log4j.appender.File.MaxFileSize = 10MB  
## \u8F93\u51FA\u6240\u4EE5\u65E5\u5FD7\uFF0C\u5982\u679C\u6362\u6210DEBUG\u8868\u793A\u8F93\u51FADEBUG\u4EE5\u4E0A\u7EA7\u522B\u65E5\u5FD7  
#log4j.appender.File.Threshold = ALL  
#log4j.appender.File.layout = org.apache.log4j.PatternLayout  
#log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
#



# Configure logging for testing: optionally with log file






#log.file = static/ssm.log
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n



#log4j.appender.logfile=org.apache.log4j.FileAppender
#log4j.appender.logfile.File=static/ssm.log
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n


#-----------------------------------#
#1 定义日志输出目的地为控制台 开发时候设置成debug
log4j.rootLogger=debug,console,file
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.Target = System.out
#log4j.appender.console.Threshold=DEBUG
####可以灵活地指定日志输出格式，下面一行是指定具体的格式 ###
#%c: 输出日志信息所属的类目，通常就是所在类的全名
#%m: 输出代码中指定的消息,产生的日志具体信息 
#%n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行
#log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%c]-%m%n
#-----------------------------------#
#2 文件大小到达指定尺寸的时候产生一个新的文件 
log4j.appender.file = org.apache.log4j.RollingFileAppender
#日志文件输出目录
log4j.appender.file.File=static/ssm.log
#定义文件最大大小
log4j.appender.file.MaxFileSize=10mb

#-----------------------------------#
#3 输出日志信息
#最低级别
log4j.appender.file.Threshold=ERROR
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%p][%d{yy-MM-dd}][%c]%m%n
#-----------------------------------#
#4 mybatis 显示SQL语句部分
log4j.logger.org.mybatis=DEBUG
#log4j.logger.net.cxp.blog.dao=DEBUG
log4j.logger.com.onecard.dao=DEBUG
#log4j.logger.cn.tibet.cas.dao=DEBUG
#log4j.logger.org.mybatis.common.jdbc.SimpleDataSource=DEBUG#
#log4j.logger.org.mybatis.common.jdbc.ScriptRunner=DEBUG#
#log4j.logger.org.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG#
#log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG




##设置全局参数
#log.file = logs/ssm.log
#log.file.level = DEBUG
#
##定义根日志级别和输出端(定义了两个输出端)  
#log4j.rootLogger=${log.file.level},CONSOLE,FILE 
##定义第一个输出端，输出到控制台  
#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender  
#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout  
#log4j.appender.CONSOLE.layout.ConversionPattern=%d [%t] %-5p %c(%L) - %m%n  
#
##定时第二个输出端，输出到文件,该文件最大空间为1000KB，超过1000KB后自动备份，生成新文件  
#log4j.appender.FILE=org.apache.log4j.RollingFileAppender  
#log4j.appender.FILE.file=${log.file}  
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout  
#log4j.appender.FILE.layout.conversionPattern=%d [%t] %-5p %c(%L) - %m%n  
#log4j.appender.FILE.MaxFileSize=1000KB  
#log4j.appender.FILE.MaxBackupIndex=10  
##定义第一个输出端，输出到控制台  
#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender  
#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout  
#log4j.appender.CONSOLE.layout.ConversionPattern=%d [%t] %-5p %c(%L) - %m%n  
#
##定时第二个输出端，输出到文件,该文件最大空间为1000KB，超过1000KB后自动备份，生成新文件  
#log4j.appender.FILE=org.apache.log4j.RollingFileAppender  
#log4j.appender.FILE.file=${log.file}  
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout  
#log4j.appender.FILE.layout.conversionPattern=%d [%t] %-5p %c(%L) - %m%n  
#log4j.appender.FILE.MaxFileSize=1000KB  
#log4j.appender.FILE.MaxBackupIndex=10  
#
####显示SQL语句部分
#log4j.logger.com.ibatis=${log.file.level}
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=${log.file.level}
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=${log.file.level}
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=${log.file.level}
#log4j.logger.java.sql.Connection=${log.file.level}
#log4j.logger.java.sql.Statement=${log.file.level}
#log4j.logger.java.sql.PreparedStatement=${log.file.level}, CONSOLE
