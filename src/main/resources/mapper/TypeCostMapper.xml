<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bei.tally.dao.TypeCostMapper">
	<resultMap id="BaseResultMap" type="com.bei.tally.entity.TypeCost">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="type_name" property="typeName" jdbcType="VARCHAR" />
		<result column="product_id" property="productId" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="product_name" property="productName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, type_name, product_id, remark, del_flag, create_by, create_date,
		update_by, update_date,product_name
	</sql>
	<sql id="Base_Column_Lista">
		a.id, a.type_name, a.product_id, a.remark, a.del_flag, a.create_by,
		a.create_date, a.update_by, a.update_date,b.product_name
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_Lista" />
		from t_type_cost AS a,t_produce AS b
		where a.product_id=b.id and a.id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findList" resultMap="BaseResultMap" parameterType="com.bei.tally.entity.TypeCost">
		select
		<include refid="Base_Column_Lista" />
		from t_type_cost AS a,t_produce AS b
		<where>
			a.product_id=b.id
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="typeName != null and typeName != ''">
				AND a.type_name = #{typeName}
			</if>
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			<if test="remark != null and remark != ''">
				AND a.remark = #{remark}
			</if>
			<if test="delFlag != null and delFlag != ''">
				AND a.del_flag = #{delFlag}
			</if>
			<if test="createBy != null and createBy != ''">
				AND a.create_by = #{createBy}
			</if>
			<if test="updateBy != null and updateBy != ''">
				AND a.update_by = #{updateBy}
			</if>

			<if
				test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND create_date BETWEEN #{beginCreateDate} AND
				#{endCreateDate}
			</if>
			<!-- <if test="remark != null and remark != ''"> AND a.sto_adress LIKE 
				concat('%',#{remark},'%') </if> -->

		</where>
		ORDER BY a.create_date DESC
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_type_cost
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.bei.tally.entity.TypeCost">
		insert into t_type_cost (id, type_name, product_id,
		remark, del_flag, create_by,
		create_date, update_by, update_date
		)
		values (#{id,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR},
		#{productId,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},
		#{updateDate,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.bei.tally.entity.TypeCost">
		insert into t_type_cost
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="typeName != null">
				type_name,
			</if>
			<if test="productId != null">
				product_id,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="typeName != null">
				#{typeName,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				#{productId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="delFlag != null">
				#{delFlag,jdbcType=INTEGER},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.bei.tally.entity.TypeCost">
		update t_type_cost
		<set>
			<if test="typeName != null">
				type_name = #{typeName,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				product_id = #{productId,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=INTEGER},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bei.tally.entity.TypeCost">
		update t_type_cost
		set type_name = #{typeName,jdbcType=VARCHAR},
		product_id = #{productId,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		del_flag = #{delFlag,jdbcType=INTEGER},
		create_by = #{createBy,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_by = #{updateBy,jdbcType=VARCHAR},
		update_date = #{updateDate,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>